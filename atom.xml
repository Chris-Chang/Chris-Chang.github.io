<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>最暖一天</title>
  
  <subtitle>You got a dream, you gotta protect it!</subtitle>
  <link href="https://changzhi.space/atom.xml" rel="self"/>
  
  <link href="https://changzhi.space/"/>
  <updated>2021-05-07T02:47:00.507Z</updated>
  <id>https://changzhi.space/</id>
  
  <author>
    <name>Chang Zhi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1.3 数据挖掘的起源</title>
    <link href="https://changzhi.space/DM/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E8%B5%B7%E6%BA%90/"/>
    <id>https://changzhi.space/DM/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E8%B5%B7%E6%BA%90/</id>
    <published>2021-05-06T03:26:15.000Z</published>
    <updated>2021-05-07T02:47:00.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据挖掘的起源">数据挖掘的起源</h2><p>从机器学习/人工智能、模式识别、统计和数据库系统中汲取思想。</p><p>传统的技术可能不适合，由于当今数据具有如下特点</p><ul><li>Large-scale</li><li>High dimensional</li><li>Heterogeneous</li><li>Complex</li><li>Distributed</li></ul><span id="more"></span><p>数据挖掘是数据科学和数据驱动发现的新兴领域的关键组成部分。数据驱动方法成功的一个例子就是深度学习。</p><p>下图是数据挖掘与其他领域的关系</p><img src="/DM/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E8%B5%B7%E6%BA%90/image-20210506120942931.png" class="" title="image-20210506120942931">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;数据挖掘的起源&quot;&gt;数据挖掘的起源&lt;/h2&gt;
&lt;p&gt;从机器学习/人工智能、模式识别、统计和数据库系统中汲取思想。&lt;/p&gt;
&lt;p&gt;传统的技术可能不适合，由于当今数据具有如下特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Large-scale&lt;/li&gt;
&lt;li&gt;High dimensional&lt;/li&gt;
&lt;li&gt;Heterogeneous&lt;/li&gt;
&lt;li&gt;Complex&lt;/li&gt;
&lt;li&gt;Distributed&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="DM" scheme="https://changzhi.space/categories/DM/"/>
    
    
    <category term="DM" scheme="https://changzhi.space/tags/DM/"/>
    
  </entry>
  
  <entry>
    <title>1.4 数据挖掘的任务</title>
    <link href="https://changzhi.space/DM/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E4%BB%BB%E5%8A%A1/"/>
    <id>https://changzhi.space/DM/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E4%BB%BB%E5%8A%A1/</id>
    <published>2021-05-06T03:26:15.000Z</published>
    <updated>2021-05-07T02:47:12.342Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据挖掘的任务">数据挖掘的任务</h1><p>数据挖掘任务一般分为两大类:</p><ul><li>预测(Predictive tasks)<ul><li>这些任务的目的是根据其他属性的值预测特定属性的值。被预测的属性一般称为<strong>目标(target)</strong>或因变量<strong>(dependent variable)</strong>，用来进行预测的属性称为<strong>解释变量(explanatory)</strong>或<strong>自变量(independent variables)</strong>。</li></ul></li><li>描述(Descriptive tasks)<ul><li>这里的目标是导出模式(相关性、趋势、集群、轨迹和异常)，这些模式总结了数据中的基本关系。描述性数据挖掘任务在本质上通常是探索性的，并且经常需要后处理技术来验证和解释结果。</li></ul></li></ul><span id="more"></span><p>图1.3说明了数据挖掘的四个核心任务，<strong>可结合吴恩达的机器学习课程理解</strong>，如下所用例子该课程均有讲解。</p><img src="/DM/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E4%BB%BB%E5%8A%A1/image-20210506122246153.png" class="" title="image-20210506122246153"><ul><li><strong>预测建模</strong>（Predictive Modeling）是指将目标变量(被预测的属性)作为解释变量的函数建立模型的任务。有两种类型的预测建模任务：分类和回归。<ul><li><strong>分类</strong>（classification），<strong>用于离散目标变量。</strong>例如预测用户是否会网上购物，因为其目标变量只有两个值（是或否）。书这里同样举了对鸢尾花（例子1.1）进行分类的例子。</li><li><strong>回归</strong>（regression），<strong>用于连续目标变量。</strong>例如预测未来一段时间内的股票的价格，因为股票价格是连续的属性。</li><li>这两个任务的目标是学习一个模型，使目标变量的预测值和真实值之间的误差最小化。预测模型可用于识别将对营销活动作出反应的客户，预测地球生态系统的干扰，或根据医学测试的结果判断病人是否患有某种疾病。</li></ul></li><li><strong>关联分析</strong>（Association Analysis）<strong>用于发现描述数据中强关联特征的模式</strong>。发现的模式通常以隐含规则或特征子集的形式表示。由于关联分析的搜索空间是指数级的，所以它的目标是以一种有效的方式提取出最感兴趣的模式。关联分析的应用包括发现具有相关功能的基因组，确定可以一起访问的网页，或者了解地球气候系统中不同元素之间的关系。<ul><li>例子1.2：购物车分析。通过对收银台收集的销售数据进行关联分析可以找到顾客经常一起购买的物品，例如，购买尿布的顾客也倾向于购买牛奶。这种类型的规则可以用来识别相关产品之间潜在的交叉销售机会。</li></ul></li><li><strong>聚类分析</strong>（Cluster analysis）的目的是寻找密切相关的观察结果组，从而使属于同一类的观察结果彼此之间比属于其他类的观察结果更加相似，即将具有相同特征的观察结果归为一类。聚类已被用于对相关客户集进行分组，找到对地球气候有重大影响的海洋区域，并压缩数据。<ul><li>例子1.3：文章分类。根据文章中出现关键词的频度来进行对其分类。</li></ul></li><li><strong>异常检测</strong>（Anomaly Detection）是识别其特征与其他数据显著不同的观测数据的任务。这种观测被称为异常或异常值。异常检测算法的目标是发现真实的异常，避免错误地将正常对象标记为异常。换句话说，一个好的异常检测器必须具有高检测率和低误报率。异常检测的应用包括检测欺诈、网络入侵、异常疾病的模式和生态系统失调，如干旱、洪水、火灾、飓风等。<ul><li>例子1.4：信用卡反欺诈检测。由于欺诈案件的数量相对于合法交易的数量相对较少，可以应用异常检测技术为用户建立合法交易描述文件。当新交易产生时，将它与用户的描述文件进行比较。如果交易的特征与之前创建的交易描述文件非常不同，那么该交易将被标记为潜在的欺诈。</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数据挖掘的任务&quot;&gt;数据挖掘的任务&lt;/h1&gt;
&lt;p&gt;数据挖掘任务一般分为两大类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;预测(Predictive tasks)
&lt;ul&gt;
&lt;li&gt;这些任务的目的是根据其他属性的值预测特定属性的值。被预测的属性一般称为&lt;strong&gt;目标(target)&lt;/strong&gt;或因变量&lt;strong&gt;(dependent variable)&lt;/strong&gt;，用来进行预测的属性称为&lt;strong&gt;解释变量(explanatory)&lt;/strong&gt;或&lt;strong&gt;自变量(independent variables)&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;描述(Descriptive tasks)
&lt;ul&gt;
&lt;li&gt;这里的目标是导出模式(相关性、趋势、集群、轨迹和异常)，这些模式总结了数据中的基本关系。描述性数据挖掘任务在本质上通常是探索性的，并且经常需要后处理技术来验证和解释结果。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="DM" scheme="https://changzhi.space/categories/DM/"/>
    
    
    <category term="DM" scheme="https://changzhi.space/tags/DM/"/>
    
  </entry>
  
  <entry>
    <title>1.1 什么是数据挖掘？</title>
    <link href="https://changzhi.space/DM/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    <id>https://changzhi.space/DM/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/</id>
    <published>2021-05-04T03:26:15.000Z</published>
    <updated>2021-05-07T02:46:45.816Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是数据挖掘">什么是数据挖掘？</h1><p>有很多定义：</p><ul><li>Non-trivial extraction of implicit, previously unknown and potentially useful information from data</li><li>Exploration &amp; analysis, by automatic or semi-automatic means, of large quantities of data in order to discover meaningful patterns</li></ul><blockquote><p>Data mining is the process of automatically discovering useful information in large data repositories.</p></blockquote><p>总的来说，<strong>数据挖掘是在大型数据仓库中自动发现有用信息的过程。</strong>数据挖掘技术被用于搜索大型数据集，以找到新的和有用的模式。它还可以预测未来的观察结果，比如客户将在网上或实体店消费的金额。</p><span id="more"></span><p>但并不是所有的信息发现任务都是数据挖掘。例如查询处理，包括在数据库中查询记录，搜索相关网站。因为这些工作只是与数据库管理系统或知识检索系统的简单交互。尽管如此，数据挖掘技术已经被用于提高这类系统的性能，方法是基于与输入查询的相关性来提高搜索结果的质量。</p><h2 id="数据挖掘和知识发现">数据挖掘和知识发现</h2><blockquote><p>Data mining is an integral part of knowledge discovery in databases (KDD), which is the overall process of converting raw data into useful information</p></blockquote><p>数据挖掘是数据库知识发现(knowledge discovery in database, KDD)的重要组成部分，是将原始数据转化为有用信息的整个过程。</p><img src="/DM/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/image-20210506102102770.png" class="" title="image-20210506102102770"><ul><li><p>输入数据可以以各种格式存储(平面文件、电子表格或关系表)，可以存储在集中式数据存储库中，也可以分布在多个站点上。</p></li><li><p><strong>数据预处理的目的是将原始输入数据转换为适合后续分析的格式</strong>。数据预处理（Data Preprocessing）的步骤包括融合多源数据、清理数据以去除噪声和重复观测、选择与当前数据挖掘任务相关的记录和特征。由于收集和存储数据的方式多种多样，其可能是整个知识发现过程中最费时费力的步骤。</p></li><li><p>“闭环”（Closing the loop）,指的是将数据挖掘结果集成到决策支持系统的过程。例如，在商业应用中，数据挖掘结果提供的见解可以与商业活动管理工具集成，以便进行和测试有效的营销推广。这种集成就需要后处理步骤（Postprocessing），以确保只有有效和有用的结果被纳入决策支持系统。</p></li></ul><p>虽然数据挖掘传统上被视为KDD框架中的中间过程，但多年来它已经成为计算机科学中的一个学术领域，关注于KDD的所有方面，包括数据预处理、挖掘和后处理。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是数据挖掘&quot;&gt;什么是数据挖掘？&lt;/h1&gt;
&lt;p&gt;有很多定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Non-trivial extraction of implicit, previously unknown and potentially useful information from data&lt;/li&gt;
&lt;li&gt;Exploration &amp;amp; analysis, by automatic or semi-automatic means, of large quantities of data in order to discover meaningful patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Data mining is the process of automatically discovering useful information in large data repositories.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总的来说，&lt;strong&gt;数据挖掘是在大型数据仓库中自动发现有用信息的过程。&lt;/strong&gt;数据挖掘技术被用于搜索大型数据集，以找到新的和有用的模式。它还可以预测未来的观察结果，比如客户将在网上或实体店消费的金额。&lt;/p&gt;</summary>
    
    
    
    <category term="DM" scheme="https://changzhi.space/categories/DM/"/>
    
    
    <category term="DM" scheme="https://changzhi.space/tags/DM/"/>
    
  </entry>
  
  <entry>
    <title>1.2 推动数据挖掘发展的因素</title>
    <link href="https://changzhi.space/DM/%E6%8E%A8%E5%8A%A8%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%8F%91%E5%B1%95%E7%9A%84%E5%9B%A0%E7%B4%A0/"/>
    <id>https://changzhi.space/DM/%E6%8E%A8%E5%8A%A8%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%8F%91%E5%B1%95%E7%9A%84%E5%9B%A0%E7%B4%A0/</id>
    <published>2021-05-04T03:26:15.000Z</published>
    <updated>2021-05-07T06:02:12.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="推动数据挖掘发展的因素">推动数据挖掘发展的因素</h1><p>传统的数据分析技术在应对大数据应用带来的挑战时，经常遇到实际困难。以下是推动数据挖掘发展的一些具体挑战。</p><span id="more"></span><h2 id="可扩展">可扩展</h2><p>（Scalability）</p><p>由于数据生成和收集方面的进步，TB、PB甚至EB大小的数据集越来越普遍。<strong>如果数据挖掘算法要处理这些庞大的数据集，它们必须是可扩展的。</strong>可扩展性还可能需要实现新的数据结构，以高效地访问单个记录。比如内存不足时需要使用外部算法。可扩展性也可以通过使用抽样或开发并行和分布式算法来改进。</p><h2 id="高维度">高维度</h2><p>（High Dimensionality）</p><p>现在经常会遇到具有数百或数千个属性的数据集，而不是几十年前仅有的几个属性。如在生物信息学中，微阵列技术的进展产生了涉及数千个特征的基因表达数据。针对低维数据开发的传统数据分析技术常常不能很好用于高维。在一些数据分析算法中，计算复杂度随着维数(特征的数量)的增加而迅速增加。</p><h2 id="异构和复杂的数据">异构和复杂的数据</h2><p>（Heterogeneous and Complex Data）</p><p>传统的数据分析方法经常处理包含相同类型属性的数据集，包括连续的或分类的。现代的数据呈现出复杂和异构性。如包含了文本，超链接，图片，视频等的网页数据。具有顺序和三维结构的DNA数据。<strong>为挖掘此类复杂对象而开发的技术应考虑数据中的关系</strong>，如时间和空间自相关、图的连通性以及半结构化文本和XML文档中元素之间的父子关系。</p><h2 id="数据的所有权和分布">数据的所有权和分布</h2><p>（Data Ownership and Distribution）</p><p>有时，分析所需的数据并不存储在一个位置或属于一个组织。相反，数据在地理上分布在属于多个实体的资源之间。这就要求开发分布式数据挖掘技术。分布式数据挖掘算法面临的关键挑战包括:</p><ol type="1"><li>如何减少执行分布式计算所需的通信量;</li><li>如何有效地整合来自多个来源的数据挖掘结果;</li><li>如何解决数据安全和隐私问题</li></ol><h2 id="非传统的分析">非传统的分析</h2><p>传统的统计方法是基于假设和检验的范式。也就是说，提出一个假设，设计一个实验来收集数据，然后根据假设对数据进行分析。不幸的是，这个过程是非常劳动密集型的。当前的数据分析任务通常需要生成和评估数千个假设，因此，一些数据挖掘技术的发展是由假设生成和评估过程自动化的愿望推动的。此外，数据挖掘中分析的数据集通常不是精心设计的实验结果，它代表着数据的机会样本，而不是随机样本。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;推动数据挖掘发展的因素&quot;&gt;推动数据挖掘发展的因素&lt;/h1&gt;
&lt;p&gt;传统的数据分析技术在应对大数据应用带来的挑战时，经常遇到实际困难。以下是推动数据挖掘发展的一些具体挑战。&lt;/p&gt;</summary>
    
    
    
    <category term="DM" scheme="https://changzhi.space/categories/DM/"/>
    
    
    <category term="DM" scheme="https://changzhi.space/tags/DM/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://changzhi.space/others/Hello%20World/"/>
    <id>https://changzhi.space/others/Hello%20World/</id>
    <published>2021-04-29T09:12:29.417Z</published>
    <updated>2021-05-07T02:51:07.415Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="math">Math</h3><p><span class="math inline">\(\theta_1:=\theta_1-\alpha \frac{d}{d\theta_1} J(\theta_1)\)</span></p><img src="/others/Hello%20World/image-20210429190141690.png" class="" title="image-20210429190141690">]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.1-What is Machine Learning</title>
    <link href="https://changzhi.space/ML/What%20is%20Machine%20Learning/"/>
    <id>https://changzhi.space/ML/What%20is%20Machine%20Learning/</id>
    <published>2021-04-28T03:33:59.000Z</published>
    <updated>2021-05-07T02:48:34.836Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是机器学习">什么是机器学习？</h2><p>提供了机器学习的两种定义。亚瑟·塞缪尔（Arthur Samuel）将其描述为：“使计算机无需明确编程即可学习的研究领域”。这是一个较旧的非正式定义。</p><p>汤姆·米切尔（Tom Mitchell）提供了一个更现代的定义：“如果某计算机程序在T任务中的性能（由P来衡量）随着经验E的提高而提高，则可以说它是从经验E中学习有关某类任务T和性能度量P的。 ”</p><p>例如：玩跳棋。</p><p>E =玩过许多跳棋游戏的经验</p><p>T =扮演跳棋的任务。</p><p>P =程序将赢得下一场比赛的概率。</p><p>通常，可以将任何机器学习问题分配给以下两种广泛的分类之一：</p><p>监督学习和无监督学习。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是机器学习&quot;&gt;什么是机器学习？&lt;/h2&gt;
&lt;p&gt;提供了机器学习的两种定义。亚瑟·塞缪尔（Arthur Samuel）将其描述为：“使计算机无需明确编程即可学习的研究领域”。这是一个较旧的非正式定义。&lt;/p&gt;
&lt;p&gt;汤姆·米切尔（Tom Mitchell）提</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.3-Unsupervised Learning</title>
    <link href="https://changzhi.space/ML/Unsupervised%20Learning/"/>
    <id>https://changzhi.space/ML/Unsupervised%20Learning/</id>
    <published>2021-04-28T03:32:55.000Z</published>
    <updated>2021-05-07T02:48:06.745Z</updated>
    
    <content type="html"><![CDATA[<p>与监督学习相比，无监督学习的数据没有属性或者标签，即给定的数据集都是一样的。我们不知道每个数据是什么意义。让机器在从数据集中找到某种结构，对于无监督学习，没有基于预测结果的反馈。</p><p>即：只告诉算法，你看这有一堆数据，我不知道这些数据是什么东东，不知道里面有什么类型，叫什么名字。请问你可以自动的找到这些数据的类型吗？然后自动的按照类型将这些个体分类。因为<strong>对于这些数据样本来说，我们没有给算法一个正确答案，所以这就是无监督学习。</strong></p><img src="/ML/Unsupervised%20Learning/image-20210419110804386.png" class="" title="image-20210419110804386"><ul><li><p>聚类算法：将数据集分类</p><ul><li>谷歌新闻：搜索成千万条新闻，然后自动的将他们聚合在一起，使有关同一主题新闻的放在一起</li><li>通过基因序列的特征将人分类</li><li>被用来组织大型的计算机集群，试图找出哪些机器趋向于协同工作，如果把这些机器放在一起可以让数据中心更高效地工作</li><li>社交网络分析：联系人分类</li><li>客户市场细分，将不同的客户细分到市场中，从而进行有效的销售。我们有客户数据但预先不知道有哪些细分市场，并且不知道谁属于哪个细分的市场</li><li>天文数据分析</li></ul></li><li><p>非聚类算法：鸡尾酒会算法。在混乱的环境中查找结构（从[鸡尾酒会]上的一系列声音中识别出个人的声音和音乐）</p><ul><li><img src="/ML/Unsupervised%20Learning/image-20210419113323165.png" class="" title="image-20210419113323165"></li></ul></li></ul><p>使用Octave环境或matlab，可以用几行代码实现一些算法</p><p>先用Octave写出一个程序原型，确定该算法可以工作后，移植到C++或Java等其他编译环境，svd()解线性方程函数</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;与监督学习相比，无监督学习的数据没有属性或者标签，即给定的数据集都是一样的。我们不知道每个数据是什么意义。让机器在从数据集中找到某种结构，对于无监督学习，没有基于预测结果的反馈。&lt;/p&gt;
&lt;p&gt;即：只告诉算法，你看这有一堆数据，我不知道这些数据是什么东东，不知道里面有什么</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.2-Supervised Learning</title>
    <link href="https://changzhi.space/ML/Supervised%20Learning/"/>
    <id>https://changzhi.space/ML/Supervised%20Learning/</id>
    <published>2021-04-28T03:31:30.000Z</published>
    <updated>2021-05-07T02:47:50.824Z</updated>
    
    <content type="html"><![CDATA[<h1 id="supervised-learning">Supervised Learning</h1><h2 id="监督学习">监督学习</h2><p>监督学习：给定已知正确输出结果(以属性或者标签进行标识)的数据集，让机器通过算法学习知道输入和输出之间的关系。</p><p>监督学习问题有两大类：</p><ul><li><p>回归问题：试图在连续输出中预测结果，这意味着我们试图将输入变量映射到某个连续函数</p><ul><li><p>例子：预测房价</p><img src="/ML/Supervised%20Learning/image-20210419104818772.png" class="" title="image-20210419104818772"></li></ul></li><li><p>分类问题：试图以离散输出预测结果，我们试图将输入变量映射到离散的类别中</p><ul><li><p>预测癌症</p><img src="/ML/Supervised%20Learning/image-20210419105010405.png" class="" title="image-20210419105010405"><img src="/ML/Supervised%20Learning/image-20210419105105352.png" class="" title="image-20210419105105352"></li></ul></li></ul><h3 id="测验">测验</h3><p>问题一：预测公司接下来三个月的商品销售量（回归问题）</p><p>问题二：预测用户账户是否被黑客攻击过（分类问题）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;supervised-learning&quot;&gt;Supervised Learning&lt;/h1&gt;
&lt;h2 id=&quot;监督学习&quot;&gt;监督学习&lt;/h2&gt;
&lt;p&gt;监督学习：给定已知正确输出结果(以属性或者标签进行标识)的数据集，让机器通过算法学习知道输入和输出之间的关系。&lt;/</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.4-Model Representation</title>
    <link href="https://changzhi.space/ML/Model%20Representation/"/>
    <id>https://changzhi.space/ML/Model%20Representation/</id>
    <published>2021-04-28T03:30:15.000Z</published>
    <updated>2021-05-07T02:47:23.281Z</updated>
    
    <content type="html"><![CDATA[<h2 id="单变量线性回归linear-regression-with-one-variable">单变量线性回归Linear regression with one variable</h2><p>学习整个监督学习的流程</p><img src="/ML/Model%20Representation/image-20210420090729205.png" class="" title="image-20210420090729205"><p>监督学习中我们有一个数据集，这个数据集被称为训练集。对于预测房价的例子，我们有一个训练集，包含不同的房屋价格。我们的任务就是从数据集中学习预测房屋的价格。</p><img src="/ML/Model%20Representation/image-20210420091343578.png" class="" title="image-20210420091343578"><p>训练集里的房屋价格，喂给我们的学习算法，然后输出一个函数（h）。hypothesis是从x到y的一个映射函数</p><img src="/ML/Model%20Representation/image-20210420092148599.png" class="" title="image-20210420092148599">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;单变量线性回归linear-regression-with-one-variable&quot;&gt;单变量线性回归Linear regression with one variable&lt;/h2&gt;
&lt;p&gt;学习整个监督学习的流程&lt;/p&gt;
&lt;img src=&quot;/ML/Model</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.8-Gradient Descent</title>
    <link href="https://changzhi.space/ML/Gradient%20Descent/"/>
    <id>https://changzhi.space/ML/Gradient%20Descent/</id>
    <published>2021-04-28T03:28:52.000Z</published>
    <updated>2021-05-07T02:46:21.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="梯度下降算法">梯度下降算法</h2><p>这是一种常见的算法，不仅仅用在线性回归问题上，也被用在机器学习领域中的众多领域。</p><p>本节用梯度下降算法最小化函数<span class="math inline">\(J\)</span></p><p>问题概述：</p><img src="/ML/Gradient%20Descent/image-20210428093723946.png" class="" title="image-20210428093723946"><p>梯度下降算法所求的是局部最小值。</p><p>为了简化问题，使用两个参数。想象一下自己在山上，想要下山，然后你环顾四周，选择从什么方向将会最快下山。然后一步一步以此类推。得到如下图。</p><img src="/ML/Gradient%20Descent/image-20210428094002738.png" class="" title="image-20210428094002738"><p>如果从不同的位置进行初始化会得到不同的路线，从而得到不同的局部最优解</p><img src="/ML/Gradient%20Descent/image-20210428094159913.png" class="" title="image-20210428094159913"><p>梯度下降算法定义：</p><p><span class="math inline">\(\alpha\)</span>称为学习速率，它控制我们以多大幅度更新这个参数<span class="math inline">\(\theta_j\)</span>.它控制了我们下山时会迈出多大的步子。因此如果<span class="math inline">\(\alpha\)</span>值很大，那么相应的梯度下降过程中，我们会试图用大步子下山。如果很小则用小碎步下山。在梯度下降算法中我们要<strong>同时更新<span class="math inline">\(\theta_0\)</span>和<span class="math inline">\(\theta_1\)</span>,</strong>当j=0和j=1时，会产生更新。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;梯度下降算法&quot;&gt;梯度下降算法&lt;/h2&gt;
&lt;p&gt;这是一种常见的算法，不仅仅用在线性回归问题上，也被用在机器学习领域中的众多领域。&lt;/p&gt;
&lt;p&gt;本节用梯度下降算法最小化函数&lt;span class=&quot;math inline&quot;&gt;\(J\)&lt;/span&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.9-Gradient Descent Intuition</title>
    <link href="https://changzhi.space/ML/Gradient%20Descent%20Intuition/"/>
    <id>https://changzhi.space/ML/Gradient%20Descent%20Intuition/</id>
    <published>2021-04-28T03:27:48.000Z</published>
    <updated>2021-05-07T02:46:26.944Z</updated>
    
    <content type="html"><![CDATA[<img src="/ML/Gradient%20Descent%20Intuition/image-20210428101426323.png" class="" title="image-20210428101426323"><img src="/ML/Gradient%20Descent%20Intuition/image-20210428101630702.png" class="" title="image-20210428101630702"><img src="/ML/Gradient%20Descent%20Intuition/image-20210428102156398.png" class="" title="image-20210428102156398"><p>线性回归算法</p><img src="/ML/Gradient%20Descent%20Intuition/image-20210428102420775.png" class="" title="image-20210428102420775"><img src="/ML/Gradient%20Descent%20Intuition/image-20210428103332351.png" class="" title="image-20210428103332351"><p>在梯度下降中，当我们接近一个局部的最小值的过程里，梯度下降算法会自动采取越来越小的步子。这是因为当我我们接近局部最优时，其定义就是导数等于0。因此当我们接近局部最优，导数项会自动变小，所以梯度下降会自动采取更小的步子，这就是不需要减小<span class="math inline">\(\alpha\)</span>或时间的原因。梯度下降算法，可以用它来最小化任何成本函数J,而不是我们为线性回归定义的那个成本函数J</p><p><span class="math inline">\(\theta_1:=\theta_1-\alpha \frac{d}{d\theta_1} J(\theta_1)\)</span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/ML/Gradient%20Descent%20Intuition/image-20210428101426323.png&quot; class=&quot;&quot; title=&quot;image-20210428101426323&quot;&gt;
&lt;img src=&quot;/ML/Gradient%</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.5-Cost Function</title>
    <link href="https://changzhi.space/ML/Cost%20Function/"/>
    <id>https://changzhi.space/ML/Cost%20Function/</id>
    <published>2021-04-28T03:26:15.000Z</published>
    <updated>2021-05-07T02:46:32.035Z</updated>
    
    <content type="html"><![CDATA[<p>本节定义代价函数的数学定义即概念，弄清楚如何把最有可能的直线与我们的数据相拟合</p><img src="/ML/Cost%20Function/image-20210420094452927.png" class="" title="image-20210420094452927"><p>在<strong>线性回归</strong>中我们有一个训练集，可能就像上面绘制的，我们要做的就是得出<span class="math inline">\(\Theta_0 ，\Theta_1\)</span> 这两个参数的值，来让假设函数所表示的直线尽可能与数据集吻合。如何得出<span class="math inline">\(\Theta_0\)</span>和<span class="math inline">\(\Theta_1\)</span>呢?</p><p>我们要做的事情是尽量减少假设的输出与房子真实价格之间差的平方。代价函数也被称为平方误差成本函数</p><img src="/ML/Cost%20Function/image-20210420100635750.png" class="" title="image-20210420100635750">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本节定义代价函数的数学定义即概念，弄清楚如何把最有可能的直线与我们的数据相拟合&lt;/p&gt;
&lt;img src=&quot;/ML/Cost%20Function/image-20210420094452927.png&quot; class=&quot;&quot; title=&quot;image-20210420094</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.7-Cost Function Intuition II</title>
    <link href="https://changzhi.space/ML/Cost%20Function%20Intuition%20II/"/>
    <id>https://changzhi.space/ML/Cost%20Function%20Intuition%20II/</id>
    <published>2021-04-28T03:25:11.000Z</published>
    <updated>2021-05-07T02:46:40.618Z</updated>
    
    <content type="html"><![CDATA[<p>深入学习代价函数的作用。理解代价函数<span class="math inline">\(J\)</span>所表达的值，它们是什么样的，它们对应的假设是什么样的。以及什么样的假设对应的点更接近代价函数<span class="math inline">\(J\)</span>的最小值</p><img src="/ML/Cost%20Function%20Intuition%20II/image-20210428090055570.png" class="" title="image-20210428090055570"><img src="/ML/Cost%20Function%20Intuition%20II/image-20210428090946716.png" class="" title="image-20210428090946716"><p>二元参数的代价函数的三维表示图：</p><img src="/ML/Cost%20Function%20Intuition%20II/image-20210428091030392.png" class="" title="image-20210428091030392"><p>用上述三维图像用二维的轮廓图表示后：</p><img src="/ML/Cost%20Function%20Intuition%20II/image-20210428091118488.png" class="" title="image-20210428091118488"><img src="/ML/Cost%20Function%20Intuition%20II/image-20210428091155597.png" class="" title="image-20210428091155597"><img src="/ML/Cost%20Function%20Intuition%20II/image-20210428091551346.png" class="" title="image-20210428091551346"><p>显然最后一个图拟合度更好。</p><p>我们真正需要的是一种有效的算法，能够自动地找出这些使代价函数<span class="math inline">\(J\)</span>取最小值的参数<span class="math inline">\(\theta_0\)</span>和<span class="math inline">\(\theta_1\)</span>来。后续会遇到更复杂的、更高维度、更多参数的情况，这些情况很难画出图像来将其可视化。我们真正需要的是编写程序来找出这些最小化代价函数的<span class="math inline">\(\theta_0\)</span>和<span class="math inline">\(\theta_1\)</span>的值。下节将介绍一种算法能够自动地找出能使代价函数<span class="math inline">\(J\)</span>最小化的参数<span class="math inline">\(\theta_0\)</span>和<span class="math inline">\(\theta_1\)</span>的值。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;深入学习代价函数的作用。理解代价函数&lt;span class=&quot;math inline&quot;&gt;\(J\)&lt;/span&gt;所表达的值，它们是什么样的，它们对应的假设是什么样的。以及什么样的假设对应的点更接近代价函数&lt;span class=&quot;math inline&quot;&gt;\(J\)&lt;/sp</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>WEEK1.6-Cost Function Intuition</title>
    <link href="https://changzhi.space/ML/Cost%20Function%20Intuition%20I/"/>
    <id>https://changzhi.space/ML/Cost%20Function%20Intuition%20I/</id>
    <published>2021-04-28T03:21:36.000Z</published>
    <updated>2021-05-07T02:46:35.834Z</updated>
    
    <content type="html"><![CDATA[<p>用简化后的算法，即让这个函数只有一个参数<span class="math inline">\(\theta_1\)</span>,即设定<span class="math inline">\(\theta_0=0\)</span>来理解代价函数。</p><p>这是我们上次所讲过的内容，我们想找一条直线来拟合我们的数据，所以我们用<span class="math inline">\(\theta_0\)</span><span class="math inline">\(\theta_1\)</span></p><p>等参数得到了假设，而且通过选择不同的参数，我们会得到不同的直线拟合。</p><p>通过利用简化的假设得到的代价函数，我们可以试着更好地理解代价函数这个概念，我们要理解的是这两个重要的函数代价函数和假设函数</p><img src="/ML/Cost%20Function%20Intuition%20I/image-20210428081727914.png" class="" title="image-20210428081727914"><p><span class="math inline">\(h_\theta(x)\)</span>和<span class="math inline">\(J(\theta_1)\)</span>,<span class="math inline">\(h_\theta(x)\)</span>这个函数是假设函数，对于固定的<span class="math inline">\(\theta_1\)</span>,这是一个关于x的函数，假设函数就是一个关于x（房子大小）的函数，与此不同的是代价函数J是关于一个<span class="math inline">\(\theta_1\)</span>的函数</p><ul><li>假设函数比如样本为(1,1)(2,2)(3,3),选择<span class="math inline">\(\theta_1\)</span>等于1，则图像如下左图。这时当<span class="math inline">\(\theta_1\)</span>等于1时<span class="math inline">\(J(\theta_1)\)</span>等于多少？</li></ul><img src="/ML/Cost%20Function%20Intuition%20I/image-20210428083155392.png" class="" title="image-20210428083155392"><ul><li>假设<span class="math inline">\(\theta_1=0.5\)</span>,则假设函数如下左图，<span class="math inline">\(J(\theta_1)=0.58\)</span></li></ul><img src="/ML/Cost%20Function%20Intuition%20I/image-20210428083750881.png" class="" title="image-20210428083750881"><ul><li>假设<span class="math inline">\(\theta_1=0\)</span>，则假设函数如下左图,<span class="math inline">\(J(\theta_1)=14/6\)</span></li></ul><img src="/ML/Cost%20Function%20Intuition%20I/image-20210428085140874.png" class="" title="image-20210428085140874"><p>对于任意一个<span class="math inline">\(\theta_1\)</span>的取值，我们会得到一个不同的<span class="math inline">\(J(\theta_1)\)</span>,而且我们可以利用这些来描出右边的这条曲线。学习算法的优化目标是找到一个<span class="math inline">\(\theta_1\)</span>的值，来使<span class="math inline">\(J(\theta_1)\)</span>最小化。对于上图<span class="math inline">\(J(\theta_1)\)</span>最小化的值对应的<span class="math inline">\(\theta_1=1\)</span>，这个就确实对应着最佳的通过了数据点的拟合直线。对于这个样本，我们最后能够完美地拟合。这就是为什么最小化<span class="math inline">\(J(\theta_1)\)</span>对应着寻找一个最佳拟合直线的目标</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用简化后的算法，即让这个函数只有一个参数&lt;span class=&quot;math inline&quot;&gt;\(\theta_1\)&lt;/span&gt;,即设定&lt;span class=&quot;math inline&quot;&gt;\(\theta_0=0\)&lt;/span&gt;来理解代价函数。&lt;/p&gt;
&lt;p&gt;这是我们</summary>
      
    
    
    
    <category term="ML" scheme="https://changzhi.space/categories/ML/"/>
    
    
    <category term="ML" scheme="https://changzhi.space/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>安装并使用gitbook</title>
    <link href="https://changzhi.space/hexo/%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8gitbook/"/>
    <id>https://changzhi.space/hexo/%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8gitbook/</id>
    <published>2021-04-17T02:16:57.000Z</published>
    <updated>2021-05-07T02:51:40.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装gitbook">1 安装gitbook</h2><h3 id="安装node.js">1.1 安装node.js</h3><p>推荐nodejs版本为12.18.1，安装过程详见<a href="">使用域名和hexo在github搭建博客</a></p><h3 id="安装gitbook-1">1.2 安装gitbook</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g gitbook-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gitbook -V</span></span><br></pre></td></tr></table></figure><p>这时会自动更新。如果出现<code>Gitbook-cli install error TypeError: cb.apply is not a function inside graceful-fs</code>,这是由于较老的graceful-fs版本在较高的node.js上执行出错，下载最新的graceful-fs即可。解决方法如下：</p><span id="more"></span><p>在nodejs安装目录下找到并进入<code>gitbook-cli\node_modules\npm</code>目录，执行（我的是<code>D:\Tools\nodejs\node_modules\gitbook-cli\node_modules\npm</code>）</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> install graceful-fs@latest --save</span><br></pre></td></tr></table></figure><h2 id="使用gitbook">2 使用gitbook</h2><h3 id="创建github项目">2.1 创建github项目</h3><p>这里我创建了名为NG_ML的仓库。</p><h3 id="clone到本地或关联本地仓库">2.2 clone到本地或关联本地仓库</h3><p>这里本地创建了<code>F:\Notes\NG_ML</code>的目录，在该目录下执行<code>gitbook init</code>，会生成README.md文件和SUMMARY.md文件。</p><ul><li>README.md文件是介绍文件。</li><li>SUMMARY.md文件是目录文件。官方格式如下：中括号为目录名，后面跟的小括号是对应文件的相对路径。这里先手动创建，后面会介绍插件自动生成。不要使用notepad++编写，这里被坑了，notepad++设置成utf8生成文件后中文也会乱码，不知道什么问题。推荐使用typora书写。</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">Summary</span></span><br><span class="line"></span><br><span class="line">* <span class="selector-attr">[Introduction]</span>(README.md)</span><br><span class="line">* <span class="selector-attr">[前言]</span>(readme.md)</span><br><span class="line">* <span class="selector-attr">[第一周]</span>(part1/README.md)</span><br><span class="line">    * <span class="selector-attr">[第一节]</span>(part1/<span class="number">1</span>.md)</span><br><span class="line">    * <span class="selector-attr">[第二节]</span>(part1/<span class="number">2</span>.md)</span><br><span class="line">    * <span class="selector-attr">[第三节]</span>(part1/<span class="number">3</span>.md)</span><br><span class="line">    * <span class="selector-attr">[第四节]</span>(part1/<span class="number">4</span>.md)</span><br><span class="line">* <span class="selector-attr">[第二周]</span>(part2/README.md)</span><br><span class="line">* <span class="selector-attr">[第三周]</span>(part3/README.md)</span><br><span class="line">* <span class="selector-attr">[第四周]</span>(part4/README.md)</span><br></pre></td></tr></table></figure><img src="/hexo/%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8gitbook/image-20210430111257358.png" class="" title="image-20210430111257358"><h3 id="初始化生成对应文件并书写">2.3 初始化生成对应文件，并书写</h3><p>再次执行<code>gitbook init</code>后会根据所写的目录生成文件夹和对应文件</p><ul><li>书写内容</li></ul><img src="/hexo/%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8gitbook/image-20210430113254530.png" class="" title="image-20210430113254530"><ul><li></li><li><ul><li><code>gitbook build</code>生成目录_book</li><li><code>gitbook serve</code>生成目录_book，并预览http://localhost:4000</li></ul></li></ul><h2 id="配置">3 配置</h2><p>安装目录生成插件<code>gitbook-plugin-summary</code></p><ul><li>在笔记文件夹下新建文件为book.json，填写如下内容：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;plugins&quot;</span>: [<span class="string">&quot;summary&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>执行<code>g</code></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;安装gitbook&quot;&gt;1 安装gitbook&lt;/h2&gt;
&lt;h3 id=&quot;安装node.js&quot;&gt;1.1 安装node.js&lt;/h3&gt;
&lt;p&gt;推荐nodejs版本为12.18.1，安装过程详见&lt;a href=&quot;&quot;&gt;使用域名和hexo在github搭建博客&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装gitbook-1&quot;&gt;1.2 安装gitbook&lt;/h3&gt;
&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g gitbook-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看是否安装成功&lt;/p&gt;
&lt;figure class=&quot;highlight ebnf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;gitbook -V&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时会自动更新。如果出现&lt;code&gt;Gitbook-cli install error TypeError: cb.apply is not a function inside graceful-fs&lt;/code&gt;,这是由于较老的graceful-fs版本在较高的node.js上执行出错，下载最新的graceful-fs即可。解决方法如下：&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://changzhi.space/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://changzhi.space/tags/hexo/"/>
    
    <category term="gitbook" scheme="https://changzhi.space/tags/gitbook/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客提交百度和Google收录</title>
    <link href="https://changzhi.space/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/"/>
    <id>https://changzhi.space/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/</id>
    <published>2021-04-16T10:00:04.000Z</published>
    <updated>2021-05-07T02:50:30.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看网站是否被收录">1 查看网站是否被收录</h2><p>google或百度输入site:域名，查看域名是否被收录。如下图百度未收录，Google收录了。</p><span id="more"></span><img src="/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/image-20210416180311376.png" class="" title="image-20210416180311376"><img src="/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/image-20210416180341954.png" class="" title="image-20210416180341954"><h2 id="配置站点地图">2 配置站点地图</h2><blockquote><p>站点地图是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接</p></blockquote><p>进入我的博客目录F:，使用cmd,输入如下命令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span>hexo-generator-<span class="keyword">baidu-sitemap </span>--save</span><br><span class="line">npm <span class="keyword">install </span>hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>此时再输入<code>hexo g</code>后,public文件夹下会多出来两个文件分别为sitemap.xml和baidusitemap.xml。</p><p>部署<code>hexo d</code>后，可以在https://你的域名/sitemap.xml和https://你的域名/baidusitemap.xml查看</p><h2 id="baidu">3 baidu</h2><p><a href="https://ziyuan.baidu.com/linksubmit/url">百度站点提交入口</a></p><h3 id="验证站点">3.1 验证站点。</h3><p>输入域名，此域名要和_config.yml配置文件中的url中的一致。在添加站点时选择你的协议（我的是https）,然后验证站点。一共有三种验证方式，推荐CNAME验证。主机记录填入给的code即可。</p><img src="/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/image-20210416181353434.png" class="" title="image-20210416181353434"><h3 id="资源收录">3.2 资源收录</h3><p>点击左侧资源提交中的普通收录选项，一共有三种资源提交方式</p><img src="/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/image-20210416181905782.png" class="" title="image-20210416181905782"><p><strong>个人推荐同时使用API提交(主动推送)和sitemap</strong></p><ul><li><p>主动推送</p><ul><li>在我的博客根目录F:<code>npm install hexo-baidu-url-submit --save</code>, 然后再hexo配置文件_config.yml中添加如下内容：</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">baidu_url_submit:</span></span><br><span class="line"><span class="symbol">  count:</span> <span class="number">1</span>               <span class="meta"># 提交最新的多少个链接</span></span><br><span class="line"><span class="symbol">  host:</span> changzhi.space   <span class="meta"># 在百度站长平台中添加的域名</span></span><br><span class="line"><span class="symbol">  token:</span> your_token      <span class="meta"># 秘钥，即为上图中的接口调用地址中的token</span></span><br><span class="line"><span class="symbol">  path:</span> baidu_urls.txt   <span class="meta"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><ul><li><p>在depoly中添加type,修改如下</p><img src="/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/image-20210416182537075.png" class="" title="image-20210416182537075"></li><li><p>最后执行<code>hexo d</code>时，会进行主动推送。产生如下效果说明成功推送1条url，今日还可推送2998条</p></li></ul></li></ul><img src="/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/image-20210416183151492.png" class="" title="image-20210416183151492"><ul><li>sitemap方式<ul><li>选择sitemap方式，将第二步中的两个地址https://你的域名/sitemap.xml和https://你的域名/baidusitemap.xml，分别填入解析即可。由于github禁止百度爬取，因此此方式效果有限。</li></ul></li></ul><h2 id="google">4 google</h2><p><a href="https://www.google.com/webmasters/tools/home?hl=zh-CN">google站点提交入口</a></p><h3 id="验证站点-1">4.1 验证站点</h3><p>有两种方式，我使用网域方式好像不行。所以改用了网址前缀方式。</p><p>输入你的域名，然后会让你下载HTML验证文件,下载后将该html文件放入<code>themes/next/source</code>文件夹下。生成文件并部署到github上<code>hexo g -d</code>。然后等2分钟，点击立即验证即可。</p><h3 id="资源收录-1">4.2 资源收录</h3><p>只需要sitemap方式。点击左侧站点地图，输入sitemap.xml点击提交即可。</p><img src="/hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95/image-20210416185626286.png" class="" title="image-20210416185626286"><h2 id="至此大功告成">5 至此大功告成</h2><p>推荐阅读：<a href="https://changzhi.space/2021/04/16/%E4%BD%BF%E7%94%A8%E5%9F%9F%E5%90%8D%E5%92%8Chexo%E5%9C%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/">使用hexo在github搭建博客并绑定域名</a></p><p>参考：</p><ul><li><p><a href="https://www.jianshu.com/p/7d3d87b52ad7?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">Hexo系列：（四）Hexo博客提交百度和Google收录</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/100922816">Hexo 博客提交百度、谷歌搜索引擎收录</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;查看网站是否被收录&quot;&gt;1 查看网站是否被收录&lt;/h2&gt;
&lt;p&gt;google或百度输入site:域名，查看域名是否被收录。如下图百度未收录，Google收录了。&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://changzhi.space/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://changzhi.space/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo在github搭建博客并绑定域名</title>
    <link href="https://changzhi.space/hexo/%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    <id>https://changzhi.space/hexo/%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</id>
    <published>2021-04-16T03:51:11.000Z</published>
    <updated>2021-05-07T02:51:19.982Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装git">1 安装git</h2><ul><li><p>由于git官网下载的太慢了,可以到镜像网站下载最新版本</p><p>https://npm.taobao.org/mirrors/git-for-windows/</p></li><li><p>安装后配置 <figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">config</span> --<span class="keyword">global</span> user<span class="variable">.name</span> <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">$ git <span class="keyword">config</span> --<span class="keyword">global</span> user<span class="variable">.email</span> <span class="string">&quot;email@example.com&quot;</span></span><br></pre></td></tr></table></figure></p></li></ul><span id="more"></span><ul><li>配置远程仓库github<ul><li>本地生成SSH KEY。无需设置密码，一路回车。成功后会在用户主目录找到.ssh目录，其中包含<code>id_rsa</code>和<code>id_rsa.pub</code>。<ul><li><code>ssh-keygen -t rsa -C "youremail@example.com"</code></li></ul></li><li>登录github-&gt;打开“Account settings” -&gt; “SSH Keys” -&gt; 点“Add SSH Key” -&gt;填写任意title,在Key文本框里粘贴<code>id_rsa.pub</code>文件的内容 -&gt; 点击"Add Key"。</li></ul></li><li>git系列教程参看https://www.liaoxuefeng.com/wiki/896043488029600</li></ul><h2 id="新建一个github仓库">2 新建一个github仓库</h2><ul><li>登录github -&gt; 右上角“Create a new repo” 。仓库名为 <code>github用户名.github.io</code></li></ul><h2 id="安装node.js">3 安装node.js</h2><ul><li>下载安装nvm https://github.com/coreybutler/nvm-windows/releases</li><li>选择 nvm-setup.zip</li><li>下载并安装nvm,期间会让输入nvm路径（我的是D:）和nodejs路径（我的是D:）,默认路径是<code>C:\Users\chang\AppData\Roaming\nvm</code></li><li>安装完毕后打开cmd,输入<code>nvm version</code>,看是否出现版本号。否则检查环境变量中是否有如下（系统 -&gt; 高级系统设置 -&gt; 环境变量）。若没有则添加上。</li></ul><img src="/hexo/%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/image-20210430101525773.png" class="" title="image-20210430101525773"><ul><li>配置淘宝镜像。打开nvm安装目录下的settings.txt文件，修改后如下：</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span> D:\Tools\nvm</span><br><span class="line"><span class="symbol">path:</span> D:\Tools\nodejs</span><br><span class="line"><span class="symbol">arch:</span> <span class="number">64</span> </span><br><span class="line"><span class="symbol">proxy:</span> none</span><br><span class="line"><span class="symbol">node_mirror:</span> http://npm.taobao<span class="meta">.org</span>/mirrors/node/</span><br><span class="line"><span class="symbol">npm_mirror:</span> https://npm.taobao<span class="meta">.org</span>/mirrors/npm/</span><br></pre></td></tr></table></figure><ul><li>安装nodejs。<code>nvm install 12.18.1</code>（推荐12.18.1，较高版本后期安装gitbook会出现错误）</li><li>查看已安装的所有版本的nodejs。<code>nvm list</code></li><li>使用nodejs 12.18.1版本 <code>nvm use 12.18.1</code></li><li><code>node -v</code>,<code>npm -v</code>,<code>npx -v</code>查看是否安装成功。</li></ul><h2 id="安装hexo">4 安装hexo</h2><ul><li>全局安装：<code>npm install -g hexo-cli</code> （文件路径会在<code>D:\Tools\nodejs\node_modules</code>）或者局部安装<code>npm install hexo</code>(文件路径在执行该命令所在的<code>node_modules</code>目录下)。我使用局部安装会出问题所以使用了全局安装。推荐全局安装。</li><li>创建博客文件夹<code>F:\Blog</code>，在此文件夹中打开cmd,然后输入<code>hexo init</code>,即可初始化。</li><li>hexo常用文件夹<ul><li><code>public</code>文件夹存放生成的站点html文件,其内容是根据source中的源文件生成的</li><li><code>source</code>文件夹存放源文件,其中自己写的文档放在<code>_posts</code>文件夹中</li><li><code>themes</code>文件夹存放主题文件</li><li><code>_config.landscape.yml</code> 主题配置文件</li><li><code>_config.yml</code> hexo全局配置文件</li></ul></li><li>hexo常用命令，日常使用流程就是在3-7中依次循环，或直接使用第8条命令<ol type="1"><li><code>hexo init &lt;folder&gt;</code> ,如果指定folder则会在当前文件夹下建立并初始化名为folder的新文件夹。否则初始化当前文件夹。</li><li>hexo new page 页面名 生成一个页面，会在source目录下生成对应的目录</li><li><code>hexo new 文档名</code> 在_posts文件夹中生成一个.md文档</li><li><code>hexo clean</code> 清除站点文件夹public中的文件</li><li><code>hexo g</code>或<code>hexo generate</code> 生成站点文件</li><li><code>hexo s</code> 或<code>hexo server</code>启动本地服务，可以访问http://localhost:4000/ 预览，ctrl+c关闭。默认端口4000，可在_config.yml设定。_</li><li>_<code>hexo d</code> 或 <code>hexo deploy</code> 部署到github,需要在_config.yml中关联github仓库</li><li><code>hexo clean &amp;&amp; hexo d</code>一键部署命令</li></ol></li></ul><h2 id="hexo关联github仓库">5 hexo关联github仓库</h2><p>安装<code>hexo-deployer-git</code>,在博客目录下（我的是<code>F:\Blog</code>）执行：</p><p><code>npm install hexo-deployer-git</code></p><p>修改_config.yml。找到depoly,修改为如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repository:</span> 你的仓库地址（我的是：https:<span class="comment">//github.com/Chris-Chang/Chris-Chang.github.io.git）</span></span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><h2 id="绑定域名">6 绑定域名</h2><ul><li>我使用的是万网域名，点击阿里云控制台-》域名-》解析。按如下填写两个@和www主机记录，记录类型均为CNAME,记录值均为<code>github用户名.github.io</code></li></ul><img src="/hexo/%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/image-20210416132744788.png" class="" title="image-20210416132744788"><ul><li>打开仓库页面，选择setting</li></ul><img src="/hexo/%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/image-20210416134208029.png" class="" title="image-20210416134208029"><ul><li><p>点击pages,将你的域名输入Custom domain中并保存，48小时后才能点击<code>Enforce HTTPS</code>。然后就可以启用https协议进行访问了。</p><img src="/hexo/%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/image-20210416134620169.png" class="" title="image-20210416134620169"></li><li><p>然后进入source目录下，用记事本新建一个txt文件，输入你的域名。保存后重命名为CNAME，注意没有后缀名。</p></li><li><p>至此基本工作已经完成，按照hexo常用命令中的2-6步骤就已经可以使用了。接下来就是配置hexo主题了。</p></li></ul><h2 id="配置hexo主题和其他注意点">配置hexo主题和其他注意点</h2><p>此教程为简明教程，主题配置和我安装过程中遇到踩过的坑参看以下文章。</p><p>主题：</p><ul><li>使用pure主题,可<a href="https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html">参考教程</a>进行配置</li><li>使用next主题（本主题），可参考<a href="https://theme-next.js.org/docs/getting-started/">官方文档</a></li></ul><p>解决方案：</p><ul><li><a href="https://changzhi.space/2021/02/16/hexo%E5%92%8Ctypora%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">hexo和typora图片无法正常显示解决方案</a></li><li><a href="https://changzhi.space/2021/02/16/hexo-permalink%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">hexo permalink 本文链接中文乱码解决方案</a></li><li><a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">安装Gitalk</a></li><li><a href="https://cuiqingcai.com/30010.html">Gitalk 评论登录 403 问题解决</a></li></ul><p>gitbook的安装使用：</p><ul><li><a href="./安装并使用gitbook.md">安装并使用gitbook</a></li></ul><h2 id="nvm常用命令">nvm常用命令</h2><p>linux/unix/macos</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nvm install <span class="params">--lts</span> <span class="comment"># 下载最新的稳定版</span></span><br><span class="line">nvm use &lt;版本号&gt; <span class="comment"># 临时切换版本</span></span><br><span class="line">nvm <span class="keyword">alias</span> default &lt;版本号&gt; <span class="comment">#永久切换版本（版本别名，default就是默认使用的版本）</span></span><br><span class="line">nvm uninstall &lt;版本号&gt; <span class="comment"># 删除指定版本</span></span><br><span class="line">nvm <span class="keyword">ls</span> <span class="comment"># 查看本地所有版本</span></span><br><span class="line">nvm ls-remote <span class="params">--lts</span> <span class="comment"># 查看线上所有稳定版 </span></span><br></pre></td></tr></table></figure><p>windows</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvm install <span class="params">&lt;版本号&gt;</span> <span class="meta"># 下载指定版本</span></span><br><span class="line">nvm use <span class="params">&lt;版本号&gt;</span> <span class="meta"># 切换版本</span></span><br><span class="line">nvm uninstall <span class="params">&lt;版本号&gt;</span> <span class="meta"># 删除指定版本</span></span><br><span class="line">nvm list available <span class="meta"># 查看线上所有版本</span></span><br></pre></td></tr></table></figure><h2 id="node常用命令">node常用命令</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> init <span class="comment"># 初始化node环境，-y可以快速初始化</span></span><br><span class="line"><span class="built_in">npm</span> i &lt;package&gt; <span class="comment"># 下载指定库，看情况添加 -S或者-D，全局安装-g</span></span><br><span class="line"><span class="built_in">npm</span> uninstall &lt;package&gt; <span class="comment"># 删除node包，删除全局-g</span></span><br><span class="line"><span class="built_in">npm</span> list --depth <span class="number">0</span> <span class="comment"># 查看当前目录下载的node包</span></span><br><span class="line"><span class="built_in">npm</span> list -g --depth <span class="number">0</span> <span class="comment"># 查看全局安装的node包</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;安装git&quot;&gt;1 安装git&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;由于git官网下载的太慢了,可以到镜像网站下载最新版本&lt;/p&gt;
&lt;p&gt;https://npm.taobao.org/mirrors/git-for-windows/&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装后配置 &lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;config&lt;/span&gt; --&lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; user&lt;span class=&quot;variable&quot;&gt;.name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;config&lt;/span&gt; --&lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; user&lt;span class=&quot;variable&quot;&gt;.email&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;email@example.com&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://changzhi.space/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://changzhi.space/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>manjaro 主题安装教程</title>
    <link href="https://changzhi.space/Linux/manjaro%20%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://changzhi.space/Linux/manjaro%20%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2021-02-16T14:26:40.000Z</published>
    <updated>2021-05-07T02:49:02.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装方法">安装方法</h2><p>首先manjaro安装主题，有两种方法：</p><ul><li>方法一：通过“系统设置“-”全局主题“-”获取新的全局主题“，同样可以在”外观“中的Plasma样式、应用程序风格、颜色等当中”获取新的全局主题“。</li><li>方法二：通过manjaro kde store下载主题，然后使用osc-url在线将主题导入系统。</li></ul><span id="more"></span><p>manjaro kde store中可以搜索到很多的主题，但是能否适用于自己的桌面这就需要注意了，如果你的桌面是KDE的，那么就不能使用GTK主题，GTK主题适配于Gnome桌面。默认KDE中一个是 Global Themes这个是全局主题，也就对应与于设置中的全局主题 ;另外 Plasma Themes这是Plasma 样式，对应设置中的plasma样式。</p><h3 id="方法一">方法一</h3><p>但是由于一些原因，方法1在我的电脑上是行不通的，加载速度极慢，下载速极慢，据说可以通过proxychain设置终端代理，据说可以行得通，但是我也没有尝试，所以也就不清楚了，所以方法1是行不通的。</p><h3 id="方法二">方法二</h3><ul><li><p>第一步，下载 <code>ocs-url</code>, 通过<code>yay -S ocs-url</code>下载;</p></li><li><p>第二步，点击主题边上的 install按钮，之后会跳出是否打开<code>xdg-open</code>，点击打开<code>xdg-open</code>,然后就会调用 <code>ocs-url</code> 下载安装主题，ocs-url可以自动下载主题，安装主题，同样适用于插件、plasma等;</p></li></ul><p>另外：如果不使用以上方法，你也可以点击主题旁边的”download“按钮，下载对应的压缩包，解压之后移动到对应的目录：</p><p><code>/home/hzt/.local/share/plasma/desktoptheme</code>这是存放plasma主题 <code>/home/hzt/.local/share/plasma/look-and-feel/</code>存放全局主题 <code>/home/hzt/.local/share/plasma/plasmoids/</code>存放插件 以上目录如果没有就自行创建。</p><h2 id="安装sweet主题">安装Sweet主题</h2><p>相关链接如下：</p><p>https://store.kde.org/browse/cat/121/order/latest/</p><ul><li><p>Sweet KDE</p></li><li><p><a href="https://store.kde.org/p/1294013/">Sweet Kvantum theme</a></p></li><li><p><a href="https://store.kde.org/p/1294174/">Sweet Plasma theme</a></p></li><li><p><a href="https://store.kde.org/p/1286856/">Sweet Aurorae theme</a></p></li><li><p><a href="https://store.kde.org/p/1294011/">Sweet colorscheme</a></p></li><li><p><a href="https://store.kde.org/p/1297008/">Sweet Konsole color scheme</a></p></li><li><p><a href="https://www.pling.com/p/1305251/">Candy icons</a></p></li><li><p><a href="https://store.kde.org/p/1334945/">Sweet sddm theme</a></p></li><li><p><a href="https://www.pling.com/p/1309907/">Sweet wallpaper</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;安装方法&quot;&gt;安装方法&lt;/h2&gt;
&lt;p&gt;首先manjaro安装主题，有两种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法一：通过“系统设置“-”全局主题“-”获取新的全局主题“，同样可以在”外观“中的Plasma样式、应用程序风格、颜色等当中”获取新的全局主题“。&lt;/li&gt;
&lt;li&gt;方法二：通过manjaro kde store下载主题，然后使用osc-url在线将主题导入系统。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://changzhi.space/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://changzhi.space/tags/Linux/"/>
    
    <category term="Manjaro" scheme="https://changzhi.space/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>hexo permalink中文乱码解决方案</title>
    <link href="https://changzhi.space/hexo/hexo%20permalink%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://changzhi.space/hexo/hexo%20permalink%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2021-02-16T13:37:34.000Z</published>
    <updated>2021-05-07T02:50:46.630Z</updated>
    
    <content type="html"><![CDATA[<p>安装完hexo的pure主题后，发现copyright的本文链接时乱码的。这是因为当标题是中文时，<code>post.permalink</code>会被自动url编码，查看copyright.ejs(在<code>themes\pure\layout\_partial\post\</code>目录下),发现如下内容：</p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-link hidden-xs&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>本文链接：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- post.permalink %&gt;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&lt;%= post.title %&gt;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external&quot;</span>&gt;</span>&lt;%- post.permalink %&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>尝试了网上普遍的添加urlname方案，很麻烦，而且我还没有弄成功...</p><p>最后查阅<a href="https://hexo.io/news/2019/10/14/hexo-4-released/">官方文档</a>发现，hexo其实内置了<code>decodeURI()</code>函数，可以将编码后的内容解码，因此修改后的内容如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-link hidden-xs&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>本文链接：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- post.permalink %&gt;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&lt;%= post.title %&gt;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external&quot;</span>&gt;</span>&lt;%- decodeURI(post.permalink) %&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这时即可如下正常显示。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;安装完hexo的pure主题后，发现copyright的本文链接时乱码的。这是因为当标题是中文时，&lt;code&gt;post.permalink&lt;/code&gt;会被自动url编码，查看copyright.ejs(在&lt;code&gt;themes\pure\layout\_partial\post\&lt;/code&gt;目录下),发现如下内容：&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://changzhi.space/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://changzhi.space/tags/hexo/"/>
    
    <category term="解决方案" scheme="https://changzhi.space/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>manjaro 安装教程</title>
    <link href="https://changzhi.space/Linux/manjaro%20%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://changzhi.space/Linux/manjaro%20%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2021-02-16T06:53:47.000Z</published>
    <updated>2021-05-07T02:49:39.407Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考 https://zhuanlan.zhihu.com/p/114296129</p></blockquote><h2 id="安装和挂载">1 安装和挂载：</h2><ul><li>/boot/efi 挂载到公共的的/efi分区 保留数据</li><li>swap 分区 linux交换区</li><li>/ /ext4</li></ul><span id="more"></span><h2 id="挂载ntfs">1.1 挂载ntfs</h2><p>参考：https://www.cnblogs.com/suge-0620/p/13587224.html</p><p>https://wiki.archlinux.org/index.php/NTFS-3G</p><ul><li>安装ntfs-3g</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> pacman -S ntfs-<span class="number">3</span>g</span><br></pre></td></tr></table></figure><ul><li>查看哪个是ntfs分区</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="regexp">/sbin/</span>fdisk -l</span><br></pre></td></tr></table></figure><ul><li><p>编辑<code>/etc/fstab</code>,添加如下内容</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/dev/</span>NTFS-partition  <span class="regexp">/mnt/</span>windows  ntfs-<span class="number">3</span>g   uid=userid,gid=groupid    <span class="number">0</span>       <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>注意当windows没有正常关闭时，可能无法进行写挂载，只能只读</p></li></ul><h2 id="换源">2 换源</h2><p>启动terminal，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br></pre></td></tr></table></figure><p>在弹出的框中选一个最快的源，一个就好，选多了会降低速度</p><p><strong>6.9更新，不建议使用archlinuxcn的源，因为并不一定兼容</strong>（而且已经有人遇到了问题</p><p>如果真的需要用（比如想安装mysql简单点），执行：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/pacman.conf</span><br></pre></td></tr></table></figure><p>在末尾输入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = http://mirrors.163.com/archlinux-cn/$arch</span><br></pre></td></tr></table></figure><p>保存退出（Ctrl+X 输入y）接着更新系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syyu</span><br></pre></td></tr></table></figure><p>系统更新完毕</p><p>如果上一步添加了archlinuxcn的源：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><h2 id="安装软件">3 安装软件</h2><h3 id="安装vim">3.1 安装vim</h3><h3 id="安装yay">3.2 安装yay</h3><p>Manjaro背靠Arch软件仓库，安装软件爽的yp，仓库又全又新，基本上遇不到依赖问题需要手动去搜该怎么安装，这也是我不愿意换回Ubuntu的一个重要原因</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S yay</span><br></pre></td></tr></table></figure><p>yay是一个用Go语言写的一个AUR助手，有些时候官方仓库没有你想要的软件，就需要通过yay来安装</p><p>有了yay，以后就不用sudo pacman了</p><h3 id="安装输入法">3.3 安装输入法</h3><h4 id="安装fcitx5输入法框架">3.3.1 安装fcitx5（输入法框架）</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yay</span> -S fcitx<span class="number">5</span>-im</span><br></pre></td></tr></table></figure><p>​ 配置fcitx5的环境变量：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.pam_environment</span><br></pre></td></tr></table></figure><p>​ 内容为：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INPUT_METHOD  DEFAULT=fcitx5</span><br><span class="line">GTK_IM_MODULE DEFAULT=fcitx5</span><br><span class="line">QT_IM_MODULE  DEFAULT=fcitx5</span><br><span class="line">XMODIFIERS    DEFAULT=\@im=fcitx5</span><br></pre></td></tr></table></figure><h4 id="安装fcitx5-rime输入法引擎">3.3.2 安装fcitx5-rime（输入法引擎）</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S fcitx5-rime</span><br></pre></td></tr></table></figure><h4 id="安装rime-double-pinyin">3.3.3 安装rime-double-pinyin</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S rime-<span class="built_in">double</span>-pinyin</span><br></pre></td></tr></table></figure><p>完成之后就可以注销，重新登录之后打开fcitx5-configtool添加rime输入法</p><h4 id="配置rime">3.3.4 配置rime</h4><p>添加rime输入法后重启fcitx5,会自动生成rime用户配置文件夹，如果想初始化，可以将该文件夹删除后重启rime,会重新自动生成</p><p>默认rime用户配置文件夹:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/.local/</span>share<span class="regexp">/fcitx5/</span>rime/</span><br></pre></td></tr></table></figure><ul><li><p>新建默认全局配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/.local/</span>share<span class="regexp">/fcitx5/</span>rime/<span class="keyword">default</span>.custom.yaml</span><br></pre></td></tr></table></figure><p>添加如下內容</p></li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># default.custom.yaml</span></span><br><span class="line"><span class="meta"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line">patch:</span><br><span class="line">  switcher:</span><br><span class="line">    caption: 〔方案选单〕</span><br><span class="line">    hotkeys:</span><br><span class="line">    - Control+grave</span><br><span class="line"></span><br><span class="line">  <span class="meta"># 候选词 5 个</span></span><br><span class="line">  menu:</span><br><span class="line">    page_size: <span class="number">5</span></span><br><span class="line"></span><br><span class="line">  schema_list:</span><br><span class="line">    - schema: double_pinyin_flypy  <span class="meta"># 小鶴雙拼</span></span><br><span class="line">    - schema: luna_pinyin_simp     <span class="meta"># 朙月拼音·简化字，可以按 ctrl+` 选择临时启用正體中文</span></span><br><span class="line"></span><br><span class="line">  ascii_composer:</span><br><span class="line">    good_old_caps_lock: <span class="literal">true</span></span><br><span class="line">    switch_key:</span><br><span class="line">      Shift_L: commit_code</span><br><span class="line">      Shift_R: commit_code</span><br><span class="line">      Control_L: noop</span><br><span class="line">      Control_R: noop</span><br><span class="line">      Caps_Lock: noop</span><br><span class="line">      Eisu_toggle: clear</span><br><span class="line"></span><br><span class="line">  <span class="meta"># 默认标点符号</span></span><br><span class="line">  <span class="meta"># (如果不灵，则 把 luna_pinyin_simp.custom.yaml 里的 punctuator 部分注释掉 )</span></span><br><span class="line">  punctuator:</span><br><span class="line">    half_shape:</span><br><span class="line">    <span class="meta"># 列出和 英文标点 不同的 标点 (即打中文时需要 <span class="string">&quot;特别改&quot;</span> 的标点)</span></span><br><span class="line">    <span class="meta"># 常用标点: 冒号 分号 顿号 名字分词号 逗号 句号 问号 感叹号 钱号 破折号 省略号</span></span><br><span class="line">    <span class="meta"># 成对标点: 双引号 单引号 书名号 括号</span></span><br><span class="line"></span><br><span class="line">      <span class="meta"># 常用标点</span></span><br><span class="line">      <span class="string">&#x27;:&#x27;</span> : <span class="string">&#x27;：&#x27;</span></span><br><span class="line">      <span class="string">&#x27;;&#x27;</span> : <span class="string">&#x27;；&#x27;</span></span><br><span class="line">      <span class="string">&#x27;\&#x27;</span> : <span class="string">&#x27;、&#x27;</span></span><br><span class="line">      <span class="string">&#x27;/&#x27;</span> : <span class="string">&#x27;/&#x27;</span></span><br><span class="line">      <span class="string">&#x27;|&#x27;</span> : <span class="string">&#x27;·&#x27;</span></span><br><span class="line">      <span class="string">&#x27;,&#x27;</span> : <span class="string">&#x27;，&#x27;</span></span><br><span class="line">      <span class="string">&#x27;.&#x27;</span> : <span class="string">&#x27;。&#x27;</span></span><br><span class="line">      <span class="string">&#x27;?&#x27;</span> : <span class="string">&#x27;？&#x27;</span></span><br><span class="line">      <span class="string">&#x27;!&#x27;</span> : <span class="string">&#x27;！&#x27;</span></span><br><span class="line">      <span class="string">&#x27;$&#x27;</span> : <span class="string">&#x27;￥&#x27;</span></span><br><span class="line">      <span class="string">&#x27;_&#x27;</span> : <span class="string">&#x27;——&#x27;</span></span><br><span class="line">      <span class="string">&#x27;^&#x27;</span> : <span class="string">&#x27;……&#x27;</span></span><br><span class="line"></span><br><span class="line">      <span class="meta"># 成对标点</span></span><br><span class="line">      <span class="string">&#x27;&#x27;&#x27;&#x27;</span> : &#123; pair: [ <span class="string">&#x27;‘&#x27;</span>, <span class="string">&#x27;’&#x27;</span> ] &#125;</span><br><span class="line">      <span class="string">&#x27;&quot;&#x27;</span> : &#123; pair: [ <span class="string">&#x27;“&#x27;</span>, <span class="string">&#x27;”&#x27;</span> ] &#125;</span><br><span class="line">      <span class="string">&#x27;&lt;&#x27;</span> : <span class="string">&#x27;《&#x27;</span></span><br><span class="line">      <span class="string">&#x27;&gt;&#x27;</span> : <span class="string">&#x27;》&#x27;</span></span><br><span class="line">      <span class="string">&#x27;[&#x27;</span> : <span class="string">&#x27;【&#x27;</span></span><br><span class="line">      <span class="string">&#x27;]&#x27;</span> : <span class="string">&#x27;】&#x27;</span></span><br><span class="line">      <span class="meta">#<span class="string">&#x27;(&#x27;</span> : <span class="string">&#x27;（&#x27;</span></span></span><br><span class="line">      <span class="meta">#<span class="string">&#x27;)&#x27;</span> : <span class="string">&#x27;）&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#     其他标点样式参考。用它们替换上面的配置即可</span></span><br><span class="line"><span class="meta">#     更多参见 ori_default.yaml</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;&lt;&#x27;</span> : [ 《, 〈, «, ‹ ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;&gt;&#x27;</span> : [ 》, 〉, », › ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;&#x27;&#x27;&#x27;</span> : &#123; pair: [ <span class="string">&#x27;‘&#x27;</span>, <span class="string">&#x27;’&#x27;</span> ] &#125;</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;&quot;&#x27;</span> : &#123; pair: [ <span class="string">&#x27;“&#x27;</span>, <span class="string">&#x27;”&#x27;</span> ] &#125;</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;/&#x27;</span>: [<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;÷&#x27;</span>]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;\&#x27;</span> : [ 、, <span class="string">&#x27;\&#x27;</span>, ＼ ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;|&#x27;</span> : [ ·, <span class="string">&#x27;|&#x27;</span>, ｜, <span class="string">&#x27;§&#x27;</span>, <span class="string">&#x27;¦&#x27;</span> ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;~&#x27;</span> : [ <span class="string">&#x27;~&#x27;</span>, ～ ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;%&#x27;</span> : [ <span class="string">&#x27;%&#x27;</span>, ％, <span class="string">&#x27;°&#x27;</span>, <span class="string">&#x27;℃&#x27;</span> ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;$&#x27;</span> : [ ￥, <span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;€&#x27;</span>, <span class="string">&#x27;£&#x27;</span>, <span class="string">&#x27;¥&#x27;</span>, <span class="string">&#x27;¢&#x27;</span>, <span class="string">&#x27;¤&#x27;</span> ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;*&#x27;</span> : [ <span class="string">&#x27;*&#x27;</span>, ＊, ·, ・, ×, ※, ❂ ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;[&#x27;</span> : [ 「, 【, 〔, ［ ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;]&#x27;</span> : [ 」, 】, 〕,  ］ ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;&#123;&#x27;</span> : [ 『, 〖, ｛ ]</span></span><br><span class="line"><span class="meta">#     <span class="string">&#x27;&#125;&#x27;</span> : [ 』, 〗, ｝ ]</span></span><br><span class="line"></span><br><span class="line">  key_binder:</span><br><span class="line">    bindings:</span><br><span class="line">      <span class="meta">#</span></span><br><span class="line">      <span class="meta"># 快捷键，更多参见 ori_default.yaml</span></span><br><span class="line">      <span class="meta">#</span></span><br><span class="line">      - &#123; when: always, accept: Shift+space, toggle: full_shape &#125; <span class="meta"># Shift+space 切换全角/半角</span></span><br><span class="line">      - &#123; when: has_menu, accept: minus, <span class="built_in">send</span>: Page_Up &#125;</span><br><span class="line">      - &#123; when: has_menu, accept: equal, <span class="built_in">send</span>: Page_Down &#125;</span><br><span class="line">      <span class="meta">#</span></span><br><span class="line">      <span class="meta"># paging</span></span><br><span class="line">      <span class="meta">#</span></span><br><span class="line">       - &#123; when: has_menu, accept: comma, <span class="built_in">send</span>: Page_Up &#125;</span><br><span class="line">       - &#123; when: has_menu, accept: period, <span class="built_in">send</span>: Page_Down &#125;</span><br><span class="line">      <span class="meta">#</span></span><br><span class="line">      <span class="meta"># more technical binding</span></span><br><span class="line">      <span class="meta">#</span></span><br><span class="line">      <span class="meta"># Emacs style</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+p, send: Up &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+n, send: Down &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+b, send: Left &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+f, send: Right &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+a, send: Home &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+e, send: End &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+d, send: Delete &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+k, send: Shift+Delete &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+h, send: BackSpace &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+g, send: Escape &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+bracketleft, send: Escape &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Alt+v, send: Page_Up &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Control+v, send: Page_Down &#125;</span></span><br><span class="line">      <span class="meta"># paging keys</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: ISO_Left_Tab, send: Page_Up &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Shift+Tab, send: Page_Up &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: composing, accept: Tab, send: Page_Down &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: has_menu, accept: minus, send: Page_Up &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: has_menu, accept: equal, send: Page_Down &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: paging, accept: comma, send: Page_Up &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: has_menu, accept: period, send: Page_Down &#125;</span></span><br><span class="line">      <span class="meta"># hotkey switch</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+1, select: .next &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+2, toggle: ascii_mode &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+3, toggle: full_shape &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+4, toggle: simplification &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+5, toggle: extended_charset &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+exclam, select: .next &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+at, toggle: ascii_mode &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+numbersign, toggle: full_shape &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+dollar, toggle: simplification &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+Shift+percent, toggle: extended_charset &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Shift+space, toggle: full_shape &#125;</span></span><br><span class="line">      <span class="meta"># - &#123; when: always, accept: Control+period, toggle: ascii_punct &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>配置小鹤双拼，默认简体,新建double_pinyin_flypy.custom.yaml</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~<span class="regexp">/.local/</span>share<span class="regexp">/fcitx5/</span>rime/double_pinyin_flypy.custom.yaml</span><br></pre></td></tr></table></figure><p>添加如下內容</p></li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">patch:</span><br><span class="line">  switches:                   <span class="meta"># 注意縮進</span></span><br><span class="line">    - name: ascii_mode</span><br><span class="line">      reset: <span class="number">0</span>                <span class="meta"># reset 0 的作用是當從其他輸入方案切換到本方案時，</span></span><br><span class="line">      states: [ 中文, 西文 ]  <span class="meta"># 重設爲指定的狀態，而不保留在前一個方案中設定的狀態。</span></span><br><span class="line">    - name: full_shape        <span class="meta"># 選擇輸入方案後通常需要立即輸入中文，故重設 ascii_mode = 0；</span></span><br><span class="line">      states: [ 半角, 全角 ]  <span class="meta"># 而全／半角則可沿用之前方案中的用法。</span></span><br><span class="line">    - name: simplification</span><br><span class="line">      reset: <span class="number">1</span>                <span class="meta"># 增加這一行：默認啓用「繁→簡」轉換。</span></span><br><span class="line">      states: [ 漢字, 汉字 ]</span><br><span class="line">      </span><br><span class="line">  <span class="meta"># 載入朙月拼音擴充詞庫</span></span><br><span class="line">  <span class="string">&quot;translator/dictionary&quot;</span>: luna_pinyin.extended <span class="meta">#如果没有该文件开启时会报错，可以临时新建一个空文件luna_pinyin.extended.dict.yaml，或者先关闭，配置好词库后打开</span></span><br><span class="line"></span><br><span class="line"> <span class="meta"># 输入双拼码的时候不转化为全拼码</span></span><br><span class="line">  <span class="meta">#translator/preedit_format: &#123;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="meta">#载入custom_phrase自定义短语</span></span><br><span class="line">  engine/translators:</span><br><span class="line"></span><br><span class="line">    - punct_translator</span><br><span class="line">    - reverse_lookup_translator</span><br><span class="line">    - script_translator</span><br><span class="line">    - table_translator<span class="symbol">@custom_phrase</span> <span class="meta">#表示调用 custom_phrase段编码</span></span><br><span class="line">    - table_translator</span><br><span class="line"></span><br><span class="line">  custom_phrase:</span><br><span class="line">    dictionary: <span class="string">&quot;&quot;</span></span><br><span class="line">    user_dict: custom_phrase</span><br><span class="line">    db_class: stabledb</span><br><span class="line">    enable_completion: <span class="literal">false</span></span><br><span class="line">    enable_sentence: <span class="literal">false</span></span><br><span class="line">    initial_quality: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">#  符号快速输入和部分符号的快速上屏</span></span><br><span class="line">  punctuator:</span><br><span class="line">    import_preset: symbols</span><br><span class="line">    half_shape:</span><br><span class="line"><span class="meta">#      <span class="string">&quot;#&quot;</span>: <span class="string">&quot;#&quot;</span></span></span><br><span class="line">      <span class="string">&#x27;`&#x27;</span>: [<span class="string">&quot;·&quot;</span>,<span class="string">&quot;`&quot;</span>]</span><br><span class="line"><span class="meta">#      <span class="string">&quot;~&quot;</span>: <span class="string">&quot;~&quot;</span></span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;@&quot;</span>: <span class="string">&quot;@&quot;</span></span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;=&quot;</span>: <span class="string">&quot;=&quot;</span></span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;!&quot;</span>: <span class="string">&quot;!&quot;</span></span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;/&quot;</span>: [<span class="string">&quot;/&quot;</span>, <span class="string">&quot;÷&quot;</span>]</span></span><br><span class="line">      <span class="string">&#x27;\&#x27;</span>: <span class="string">&quot;、&quot;</span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;&#x27;&quot;</span>: &#123;pair: [<span class="string">&quot;「&quot;</span>, <span class="string">&quot;」&quot;</span>]&#125;</span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;[&quot;</span>: [<span class="string">&quot;【&quot;</span>, <span class="string">&quot;[&quot;</span>]</span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;]&quot;</span>: [<span class="string">&quot;】&quot;</span>, <span class="string">&quot;]&quot;</span>]</span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;$&quot;</span>: [<span class="string">&quot;¥&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;€&quot;</span>, <span class="string">&quot;£&quot;</span>, <span class="string">&quot;¢&quot;</span>, <span class="string">&quot;¤&quot;</span>]</span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;&lt;&quot;</span>: [<span class="string">&quot;《&quot;</span>, <span class="string">&quot;〈&quot;</span>, <span class="string">&quot;«&quot;</span>, <span class="string">&quot;&lt;&quot;</span>]</span></span><br><span class="line"><span class="meta">#      <span class="string">&quot;&gt;&quot;</span>: [<span class="string">&quot;》&quot;</span>, <span class="string">&quot;〉&quot;</span>, <span class="string">&quot;»&quot;</span>, <span class="string">&quot;&gt;&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>如果報錯，查看vim /tmp/rime.fcitx-rime.ERROR</p><h4 id="添加词库">3.3.5 添加词库</h4><ul><li><p>配置自定义词库</p><p>新建custom_phrase.txt文件，添加如下内容</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Rime table</span></span><br><span class="line"><span class="meta"># coding: utf-8</span></span><br><span class="line"><span class="meta">#@/db_name  custom_phrase.txt</span></span><br><span class="line"><span class="meta">#@/db_typetabledb</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta"># 用於【朙月拼音】系列輸入方案</span></span><br><span class="line"><span class="meta"># 【小狼毫】0.9.21 以上</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta"># 請將該文件以UTF-8編碼保存爲</span></span><br><span class="line"><span class="meta"># Rime用戶文件夾/custom_phrase.txt</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta"># 碼表各字段以製表符（Tab）分隔</span></span><br><span class="line"><span class="meta"># 順序爲：文字、編碼、權重（決定重碼的次序、可選）</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta"># 雖然文本碼表編輯較爲方便，但不適合導入大量條目</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta"># no comment</span></span><br><span class="line"></span><br><span class="line">中州韻輸入法引擎rime<span class="number">2</span></span><br><span class="line">又双叒叕yyy</span><br><span class="line">http:<span class="comment">//rime.im/rime1</span></span><br><span class="line">Rimerime<span class="number">3</span></span><br><span class="line">⌘cmd</span><br><span class="line">⌃ctl</span><br><span class="line">⌥opt</span><br><span class="line">⇧shift</span><br><span class="line">GBKgbk</span><br><span class="line">UTF<span class="number">-8</span>utfba</span><br><span class="line">macOS High Sierramacos<span class="number">2</span></span><br><span class="line">macOS Mojavemacos<span class="number">3</span></span><br><span class="line">macOSmacos<span class="number">4</span></span><br><span class="line">macOS Sierramacos<span class="number">1</span></span><br><span class="line">Google Analyticsga</span><br><span class="line">CSScss</span><br><span class="line">HTML html</span><br><span class="line">iOSios</span><br><span class="line">iPadipad</span><br><span class="line">iPhoneiphone</span><br><span class="line">iTunesitunes</span><br><span class="line">JavaScriptjs</span><br><span class="line">jQueryjquery</span><br><span class="line">MySQLmysql</span><br><span class="line">SQLsql</span><br><span class="line">Objective-Cojbc</span><br><span class="line">Rubyruby</span><br><span class="line">Rustrust</span><br><span class="line">WeChatwechat</span><br><span class="line">Swiftswift</span><br><span class="line">MacBook Prombp</span><br><span class="line">MacBookmacbook</span><br><span class="line">Appleapple</span><br><span class="line">U 盘upj</span><br><span class="line">GitHubgithub</span><br><span class="line">iMacimac</span><br><span class="line">iPadipad</span><br><span class="line">iPad Airipad</span><br><span class="line">iPad miniipad</span><br><span class="line">iPad Proipad</span><br><span class="line">iPhone Xiphonex</span><br><span class="line">iPodipod</span><br><span class="line">IPTViptv</span><br><span class="line">IPv4ipv</span><br><span class="line">IPv6ipv</span><br><span class="line">Mac App Storemas</span><br><span class="line">Mac minimacmini</span><br><span class="line">Mac Promacpro</span><br><span class="line">OS Xosx</span><br><span class="line">X-Rayxray</span><br><span class="line">Xbox Onexbox</span><br><span class="line">Youkuyouku</span><br><span class="line">YouTubeyoutube</span><br></pre></td></tr></table></figure></li><li><p>导入基础词库</p><p>参考：https://sspai.com/post/55699</p><p>词库配置文件luna_pinyin.extended.dict.yaml</p></li></ul><p>参考：</p><p>https://zhuanlan.zhihu.com/p/287774005</p><p>https://sspai.com/post/55699</p><p>https://blog.dwx.io/my-rime/#rime</p><p>https://github.com/rime/home/wiki/CustomizationGuide</p><h4 id="配置主题">3.3.6 配置主题</h4><p>https://github.com/hosxy/Fcitx5-Material-Color</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S fcitx5-material-color</span><br></pre></td></tr></table></figure><p>然后新建配置文件 <code>~/.config/fcitx5/conf/classicui.conf</code>：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 垂直候选列表</span></span><br><span class="line">Vertical Candidate <span class="attribute">List</span>=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按屏幕 DPI 使用</span></span><br><span class="line"><span class="attribute">PerScreenDPI</span>=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font (设置成你喜欢的字体)</span></span><br><span class="line"><span class="attribute">Font</span>=<span class="string">&quot;思源黑体 CN Medium 13&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主题</span></span><br><span class="line"><span class="attribute">Theme</span>=Material-Color-Pink</span><br></pre></td></tr></table></figure><p>有以下主题:</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="built_in">Pink</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="built_in">Blue</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="built_in">Brown</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="variable">DeepPurple</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="variable">Indigo</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="built_in">Red</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="variable">Teal</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="built_in">Black</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="built_in">Orange</span></span><br><span class="line"><span class="built_in">Material</span><span class="operator">-</span><span class="variable">Color</span><span class="operator">-</span><span class="variable">SakuraPink</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>单行模式</p><p>要使用单行模式，</p><ul><li>对于 fcitx5 自带的 pinyin，请修改 <code>~/.config/fcitx5/conf/pinyin.conf</code></li><li>对于 fcitx5-rime，请新建/修改 <code>~/.config/fcitx5/conf/rime.conf</code></li></ul><p>加入/修改以下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可用时在应用程序中显示预编辑文本</span></span><br><span class="line"><span class="attr">PreeditInApplication</span>=<span class="literal">True</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：修改配置文件 <code>~/.config/fcitx5/profile</code> 时，请务必退出 fcitx5 输入法，否则会因为输入法退出时会覆盖配置文件导致之前的修改被覆盖；修改其他配置文件可以不用退出 fcitx5 输入法，重启生效。</p></li></ul><h3 id="配置ohmyzsh">3.4 配置ohmyzsh</h3><p>首先说一下这个过程不需要使用pacman/yay安装软件，因此可以和安装软件并发进行</p><ul><li><p>修改默认shell为zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure></li><li><p>安装ohmyzsh</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure><ul><li>如果每次执行都失败提示被拒绝连接就先改一下hosts文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure><p>​ 把这段话复制到下面</p><pre><code><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># GitHub Start</span><br><span class="line">151.101.76.133 raw.githubusercontent.com</span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure></code></pre><ul><li>替换zsh的配置文件为oh-my-zsh</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~<span class="regexp">/.oh-my-zsh/</span>templates<span class="regexp">/zshrc.zsh-template ~/</span>.zshrc</span><br></pre></td></tr></table></figure><ul><li>更改主题</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line">找到<span class="attribute">ZSH_THEME</span>=更改为</span><br><span class="line"><span class="attribute">ZSH_THEME</span>=<span class="string">&quot;agnoster&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>安装zsh-syntax-highlighting：提供命令高亮</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><ul><li>安装autosuggestions：记住你之前使用过的命令</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><ul><li><p>安装incr：再也不用先ls在粘贴文件名了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git:<span class="regexp">//gi</span>thub.com<span class="regexp">/makeitjoe/i</span>ncr.zsh <span class="variable">$ZSH_CUSTOM</span><span class="regexp">/plugins/i</span>ncr</span><br></pre></td></tr></table></figure></li><li><p>安装thefuck：帮你更加高效地学习linux命令</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --<span class="keyword">user</span> <span class="title">thefuck</span></span><br></pre></td></tr></table></figure><p>输错命令后可以输入fuck,查看正确命令</p><ul><li><p>如果下载太慢：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.pip</span><br><span class="line">nano ~/.pip/pip.conf</span><br></pre></td></tr></table></figure></li><li><p>写入如下内容,来永久地修改了用户级别的pip下载源</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="keyword">index</span>-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">[install]</span><br><span class="line"><span class="keyword">trusted</span>-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure></li><li><p>如果安装失败则用</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yay -S thefuck</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>启用插件</p><ul><li>在<code>~/.zshrc</code>中找到<code>plugins=&#123;git&#125;</code>,添加如下：</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">plugins</span>=(                                                                           </span><br><span class="line"><span class="number">79</span>     git</span><br><span class="line"><span class="number">80</span>     zsh-syntax-highlighting</span><br><span class="line"><span class="number">81</span>     zsh-autosuggestions</span><br><span class="line"><span class="number">82</span>     incr</span><br><span class="line"><span class="number">83</span>     extract</span><br><span class="line"><span class="number">84</span> )</span><br></pre></td></tr></table></figure><p>这个sudo是ohmyzsh自带的插件，功能是在你输入的命令的开头添加sudo ，方法是双击Esc</p><p>extract也是自带插件，不用再去记不同文件的解压命令，方法是extract +你要解压的文件名</p><ul><li><p>最后一行添加</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span> $(thefuck --<span class="keyword">alias</span>)</span><br></pre></td></tr></table></figure></li><li><p>保存退出之后，手动修改konsole的默认bash为zsh：（右键Konsole -&gt; 编辑当前方案）</p></li><li><p><code>source ~/.zshrc</code></p></li></ul></li></ul><h3 id="安装字体">3.5 安装字体</h3><p>安装nerd字体</p><p>https://github.com/ryanoasis/nerd-fonts/releases</p><p>解压下载完的字体压缩包，假设目录名是JetBrainsMono</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -vr JetBrainsMono<span class="regexp">/ /u</span>sr<span class="regexp">/share/</span>fonts</span><br><span class="line">fc-cache -vf</span><br></pre></td></tr></table></figure><p>再开一个konsole，手动把字体改成JetBrainsMono Nerd Font即可</p><p>同理，安装微软雅黑，将全局设置为微软雅黑</p><h3 id="安装vimplus现代化的vim插件管理工具">3.6 安装Vimplus（现代化的vim插件管理工具）</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="string">//github.com/chxuan/vimplus.git</span> ~<span class="string">/.vimplus</span></span><br><span class="line"><span class="keyword">cd</span> ~<span class="string">/.vimplus</span></span><br><span class="line"><span class="string">./install.sh</span></span><br></pre></td></tr></table></figure><p>同样想显示icon，需要将终端字体改为打了nerd补丁的字体</p><h3 id="typora">3.7 typora</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yay -S typora</span></span><br></pre></td></tr></table></figure><h3 id="flameshot">3.8 flameshot</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yay -S flameshot</span></span><br></pre></td></tr></table></figure><p>设置 -&gt; 快捷键 -&gt; 自定义快捷键 -&gt; 编辑 -&gt; 新建 -&gt; 全局快捷键 -&gt; 命令/URL</p><p>设置触发器：设置为你习惯的快捷键 -&gt; 动作：命令/URL这填：/usr/bin/flameshot gui</p><h3 id="chrome">3.9 chrome</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S google-chrome</span><br></pre></td></tr></table></figure><h3 id="goldendict">3.10 goldendict</h3><p>timeshift</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S baidunetdisk</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S netease-cloud-music</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考 https://zhuanlan.zhihu.com/p/114296129&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装和挂载&quot;&gt;1 安装和挂载：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;/boot/efi 挂载到公共的的/efi分区 保留数据&lt;/li&gt;
&lt;li&gt;swap 分区 linux交换区&lt;/li&gt;
&lt;li&gt;/ /ext4&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://changzhi.space/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://changzhi.space/tags/Linux/"/>
    
    <category term="Manjaro" scheme="https://changzhi.space/tags/Manjaro/"/>
    
  </entry>
  
</feed>
